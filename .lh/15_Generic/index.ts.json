{
    "sourceFile": "15_Generic/index.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1655860870740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1655861034717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,3 @@\n-const genericFunc = (x: unknown[]) => {\n+const genericFunc<Type> = (x: unknown[]) => {\n   return x[0];\n };\n"
                },
                {
                    "date": 1655861053407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,3 @@\n-const genericFunc<Type> = (x: unknown[]) => {\n+const genericFunc = <Generic>(x: unknown[]) => {\n   return x[0];\n };\n"
                },
                {
                    "date": 1655861107243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,3 @@\n-const genericFunc = <Generic>(x: unknown[]) => {\n+const genericFunc = <Generic, Generic>(x: unknown[]) => {\n   return x[0];\n };\n"
                },
                {
                    "date": 1655861125522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,5 @@\n-const genericFunc = <Generic, Generic>(x: unknown[]) => {\n+const genericFunc = <Generic, Generic2>(x: unknown[]) => {\n   return x[0];\n };\n+\n+let a = genericFunc([1, 2]);\n"
                },
                {
                    "date": 1655861131875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,4 +2,6 @@\n   return x[0];\n };\n \n let a = genericFunc([1, 2]);\n+\n+console.log(a + 1);\n"
                },
                {
                    "date": 1655861143833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n const genericFunc = <Generic, Generic2>(x: unknown[]) => {\n   return x[0];\n };\n \n-let a = genericFunc([1, 2]);\n+let a = genericFunc<number>([1, 2]);\n \n console.log(a + 1);\n"
                },
                {
                    "date": 1655861149132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n const genericFunc = <Generic, Generic2>(x: unknown[]) => {\n   return x[0];\n };\n \n-let a = genericFunc<number>([1, 2]);\n+let a = genericFunc<number, string>([1, 2]);\n \n console.log(a + 1);\n"
                },
                {
                    "date": 1655861157942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n const genericFunc = <Generic, Generic2>(x: unknown[]) => {\n   return x[0];\n };\n \n-let a = genericFunc<number, string>([1, 2]);\n+let a = genericFunc<number>([1, 2]);\n \n console.log(a + 1);\n"
                },
                {
                    "date": 1655861345348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-const genericFunc = <Generic, Generic2>(x: unknown[]) => {\n+const genericFunc = <Generic>(x: Generic[]) => {\n   return x[0];\n };\n \n let a = genericFunc<number>([1, 2]);\n"
                },
                {
                    "date": 1655861365719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,4 +4,6 @@\n \n let a = genericFunc<number>([1, 2]);\n \n console.log(a + 1);\n+\n+const;\n"
                },
                {
                    "date": 1655861389738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,5 +5,5 @@\n let a = genericFunc<number>([1, 2]);\n \n console.log(a + 1);\n \n-const;\n+const extendsTest = <Type2>() => {};\n"
                },
                {
                    "date": 1655861407298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,5 +5,7 @@\n let a = genericFunc<number>([1, 2]);\n \n console.log(a + 1);\n \n-const extendsTest = <Type2>() => {};\n+const extendsTest = <Type>(x: Type) => {\n+  return x - 1;\n+};\n"
                },
                {
                    "date": 1655861415969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,7 +5,7 @@\n let a = genericFunc<number>([1, 2]);\n \n console.log(a + 1);\n \n-const extendsTest = <Type>(x: Type) => {\n+const extendsTest = <Type extends number>(x: Type) => {\n   return x - 1;\n };\n"
                },
                {
                    "date": 1655861485455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,7 +5,11 @@\n let a = genericFunc<number>([1, 2]);\n \n console.log(a + 1);\n \n+interface LengthCheck {\n+  length: numbers;\n+}\n+\n const extendsTest = <Type extends number>(x: Type) => {\n   return x - 1;\n };\n"
                },
                {
                    "date": 1655861493849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,10 @@\n \n console.log(a + 1);\n \n interface LengthCheck {\n-  length: numbers;\n+  length: number;\n }\n \n-const extendsTest = <Type extends number>(x: Type) => {\n+const extendsTest = <Type extends LengthCheck>(x: Type) => {\n   return x - 1;\n };\n"
                },
                {
                    "date": 1655861500603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,6 +10,6 @@\n   length: number;\n }\n \n const extendsTest = <Type extends LengthCheck>(x: Type) => {\n-  return x - 1;\n+  return x.length;\n };\n"
                },
                {
                    "date": 1655861545648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,6 +10,7 @@\n   length: number;\n }\n \n const extendsTest = <Type extends LengthCheck>(x: Type) => {\n+  console.log(Type);\n   return x.length;\n };\n"
                }
            ],
            "date": 1655860870740,
            "name": "Commit-0",
            "content": "const genericFunc = (x: unknown[]) => {\n  return x[0];\n};\n"
        }
    ]
}